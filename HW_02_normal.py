import math
import random

# Задача-1:
# Дан список, заполненный произвольными целыми числами, получите новый список,
# элементами которого будут квадратные корни элементов исходного списка,
# но только если результаты извлечения корня не имеют десятичной части и
# если такой корень вообще можно извлечь
# Пример: Дано: [2, -5, 8, 9, -25, 25, 4]   Результат: [3, 5, 2]

list = [2, -5, 8, 9, -25, 25, 4]
sqrt_list = []
sqrt = 0
i = 0
n = 0
while i < len(list):
    if list[i] > 0:
        sqrt = math.sqrt(list[i])
        if sqrt.is_integer() == True:
            sqrt_list.append(sqrt)
    else:
        pass
    i += 1
sqrt_list = [int(n) for n in sqrt_list]
print(sqrt_list)

#
#
# # Задача-2: Дана дата в формате dd.mm.yyyy, например: 02.11.2013.
# # Ваша задача вывести дату в текстовом виде, например: второе ноября 2013 года.
# # Склонением пренебречь (2000 года, 2010 года)
data_number = ['первое', 'второе', 'третье', 'четвертое', 'пятое', 'шестое', 'седьмое', 'восьмое', 'девятое', 'десятое',
               'одиннадцатое', 'двенадцатое',
               'тринадцатое', 'четырнадцатое', 'пятнадцатое', 'шестнадцатое', 'семнадцатое', 'восемнадцатое',
               'девятнадцатое', 'двадцатое', 'двадцать первое',
               'двадцать второе', 'двадцать третье', 'двадать четвертое', 'двадцать пятое', 'двадцать шестое',
               'двадцать седьмое', 'двадцать восьмое', 'двадцать девятое',
               'тридцатое', 'тридцать первое']
data_mounth = ['января', 'февраля', 'марта', 'апреля', 'мая', 'июня', 'июля', 'августа', 'сентября', 'октября',
               'ноября', 'декабря']
dd = int(input("Введите число в формате dd"))
if dd > 31:
    print("НЕ бывает значений дня месяца более 31")
    d = int(input("Введите число в формате dd"))
else:
    mm = int(input("Введите месяц в формате mm "))
    if mm > 12:
        print("НЕ бывает значений  месяца более 12")
        mm = int(input("Введите месяц в формате mm еще раз "))
    else:
        year = int(input("Введите год в формате yyyy "))
print("Дата {} {} {} года".format(data_number[dd-1], data_mounth[mm-1],year ))


# Задача-3: Напишите алгоритм, заполняющий список произвольными целыми числами
# в диапазоне от -100 до 100. В списке должно быть n - элементов.
# Подсказка:
# для получения случайного числа используйте функцию randint() модуля random
n = int(input("Введите количество элементов в списке:"))
list_rand = []
i = 0
while i < n:
    list_rand.append(random.randint(-100, 100))
    i+=1
print (list_rand)


# Задача-4: Дан список, заполненный произвольными целыми числами.
# Получите новый список, элементами которого будут:
# а) неповторяющиеся элементы исходного списка:
# например, lst = [1, 2, 4, 5, 6, 2, 5, 2], нужно получить lst2 = [1, 2, 4, 5, 6]
# б) элементы исходного списка, которые не имеют повторений:
# например, lst = [1 , 2, 4, 5, 6, 2, 5, 2], нужно получить lst2 = [1, 4, 6]

lst = [1, 2,2 ,3,3,3,4,5,5,5,5,6,77,8,8,9]
print("уникальные значения в lst",set(lst))
lst_once_unique = []
k = 0
while k < len(lst):
    if lst.count(lst[k]) == 1:
        lst_once_unique.append(lst[k])
    else:
        pass
    k += 1

print(lst_once_unique)

# lst = [1, 2, 4, 5, 6, 2, 5, 2, 3, 4, 5, 6, 6, 5, 4]
# set(lst)
# print("уникальные значения в lst",set(lst))
# lst_temp = set(lst)
# unique_lst = list(lst_temp)
# L = int(len(set(lst)))
# lst2 = []
# j = 0
# while i < len(lst):
#     while j < L:
#         if lst.count(unique_lst[j]) == 1:
#             lst2.append(lst[j])
#         else:
#             pass
#         j += 1
#     i += 1